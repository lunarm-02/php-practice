<?php
// 文字列を整形する---prinf関数
// printf(string $format, mixed ...$value) : int(戻り値は整形済み文字列のバイト数)
// 書籍指定子の基本構造 %[フラグ] [表示幅] [.精度] [型指定子]
// フラグ：+ - 0 # スペース
// 表示幅：出力する最小の桁数（整数部＋小数部＋小数点＋符号を含む全体の幅）

printf('%sは%sです。' . PHP_EOL, 'ニンザブロウ', 'ハムスター');  // 結果：ニンザブロウはハムスターです。
printf('売上平均（前月比）：%+0-8.3f' . PHP_EOL, 0.198765);  // 結果：売上平均（前月比）：+0.19900
printf("売上平均（前月比）：%'*10.3e" . PHP_EOL, 0.198765);  // 結果：売上平均（前月比）：**1.988e-1
printf('%.6sは%sです。', 'ニンザブロウ' . PHP_EOL, 'ハムスター');  // 結果：ニンはハムスターです。
printf('%2$sは%1$sです。%2$s、大好き！' . PHP_EOL, 'ニンザブロウ', 'ハムスター'); // 結果：ハムスターはニンザブロウです。ハムスター、大好き！
// printf関数：整形した文字列をそのまま出力
// print sprint関数：整形した結果を文字列として返す
// vprintf関数：引数を配列として渡したい場合
// print vsprintf関数：
// 以下意味的に等価
// printf('%sは%sです。', 'ニンザブロウ', 'ハムスター');
// print sprintf('%sは%sです。', 'ニンザブロウ', 'ハムスター');
// vprintf('%sは%sです。', ['ニンザブロウ', 'ハムスター']);
// print vsprintf('%sは%sです。', ['ニンザブロウ', 'ハムスター']);
?>